events {
  worker_connections 1024;
}

http {
  upstream store {
    server host.docker.internal:3000;
    # 127.0.0.1:3000; # if you are not using docker
  }

  upstream api {
    server host.docker.internal:8080;
    # 127.0.0.1:8080; # if you are not using docker
  }

  upstream admin {
    server host.docker.internal:7000;
    # 127.0.0.1:7000; # if you are not using docker
  }

  server {
    listen 80;
    server_name *.doggie.dev;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    server_name api.doggie.dev;

    ssl_certificate /etc/nginx/certs/_wildcard.doggie.dev+1.pem;
    ssl_certificate_key /etc/nginx/certs/_wildcard.doggie.dev+1-key.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
      proxy_buffering off;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port $server_port;

      proxy_pass http://api;
    }
  }

  server {
    listen 443 ssl;
    server_name store.doggie.dev;

    ssl_certificate /etc/nginx/certs/_wildcard.doggie.dev+1.pem;
    ssl_certificate_key /etc/nginx/certs/_wildcard.doggie.dev+1-key.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
      proxy_buffering off;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port $server_port;

      proxy_pass http://store;
    }
  }

  server {
    listen 443 ssl;
    server_name admin.doggie.dev;

    ssl_certificate /etc/nginx/certs/_wildcard.doggie.dev+1.pem;
    ssl_certificate_key /etc/nginx/certs/_wildcard.doggie.dev+1-key.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
      proxy_buffering off;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port $server_port;

      proxy_pass http://admin;
    }
  }
}